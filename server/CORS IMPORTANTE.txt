USO DE CORS Y COOKIES.

Para usar simplemente bearer basta y sobra con esto 

app.use(cors({
    origin: '*',     //-->> SE Permite
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'],
    allowedHeaders: ['Content-Type', 'Authorization'], 
  }));

o esto :

app.use(cors({
  origin: ['http://dominio1.com', 'http://dominio2.com'], // Lista de orígenes permitidos
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'],
  allowedHeaders: ['Content-Type', 'Authorization'],
}));

¿Por qué puedes usar un array aquí?
Cuando no usas credenciales (como cookies), el valor de origin puede ser un array de orígenes permitidos, porque Express y el middleware CORS pueden manejarlo internamente sin necesidad de un callback. Si la solicitud proviene de un origen que está en ese array, entonces se permitirá la solicitud. Si no está en la lista, será rechazada.

Pero si queremos aceptar cookies   origin: '*' no se permite. Es Obligorio poner un origen determinado.
Si estás manejando cookies o credenciales (como tokens en cookies) se permite un solo dominio.


app.use(cors({
  origin: 'http://tu-dominio.com', // Especificar el origen permitido
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'],
  allowedHeaders: ['Content-Type', 'Authorization'],
  credentials: true // Permite que las cookies sean enviadas y recibidas
}));


Que pasaria con multiples origenes??

Con multiples origenes no es simplemente poner un array

app.use(cors({
  origin: (origin, callback) => {
    // Lista de orígenes permitidos
    const allowedOrigins = ['http://dominio1.com', 'http://dominio2.com'];

    // Si el origen está en la lista, lo permitimos
    if (allowedOrigins.includes(origin)) {
      callback(null, true);  // Permite el origen
    } else {
      callback(new Error('No permitido por CORS'), false); // Bloquea el origen
    }
  },
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'],
  allowedHeaders: ['Content-Type', 'Authorization'],
  credentials: true // Si estás usando cookies o autenticación por cookies
}));